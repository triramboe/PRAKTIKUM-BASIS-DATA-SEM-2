/*MEMBUAT DATABASE TOKO_KAMERA*/
CREATE DATABASE TOKO_KAMERA;

/*MEMBUAT TABEL PADA DATABSE RUMAH_MAKAN*/


/*MEMBUAT TABEL BRAND*/
CREATE TABLE TB_BRAND (ID_BRAND VARCHAR(10) PRIMARY KEY, 
BRAND_NAME VARCHAR(20) NOT NULL);
/*MENAMBAHKAN VALUE TABEL BRAND*/
INSERT INTO TB_BRAND VALUES
('B001','CANON'),
('B002','SONY'),
('B003','LUMIX'),
('B004','FUJIFILM'),
('B005','GO PRO'),
('B006','NIKON'),
('B007','XIAOMI'),
('B008','OLYMPUS'),
('B009','INSTA 360');

/*MEMBUAT TABEL CATEGORIES*/
CREATE TABLE TB_CATEGORIES (ID_CATEGORIES VARCHAR(10) PRIMARY KEY, 
CATEGORIES_NAME VARCHAR(20) NOT NULL);
/*MENAMBAHKAN VALUE TABEL CATEGORIES*/
INSERT INTO TB_CATEGORIES VALUES
('CT01','MIRRORLESS'),
('CT02','DSLR'),
('CT03','SLR'),
('CT04','ACTION CAM');


/*MEMBUAT TABEL SUPLIER*/
CREATE TABLE TB_SUPLIER (ID_SUPLIER VARCHAR(10) PRIMARY KEY, 
SUPLIER_NAME VARCHAR(20) NOT NULL,
SUPLIER_ADDRESS VARCHAR (100) NOT NULL);
 /*MENAMBAHKAN VALUE TABEL SUPLIER*/
 INSERT INTO TB_SUPLIER VALUES
 ('S001', 'TONO','Jl R Sukamto 444 RT 9, Sumatera Selatan'),
 ('S002', 'TINI','Jl Stasiun Priok 1 Gg PJKA, Dki Jakarta'),
 ('S003', 'TONI','Jl Ngagel Jaya Slt V/8, Jawa Timur'),
 ('S004', 'BUDI','Jl Melawai Raya Melawai Plaza 129 E-F, Dki Jakarta'),
 ('S005', 'DIKO','Jl Minangkabau 23 A Psr Manggis, Dki Jakarta'),
 ('S006', 'DODI','Jl Brigjen Katamso Bangkong Plaza A 7, Jawa Tengah'),
 ('S007', 'ALAN','Jl Sultan Iskandar Muda Kav V-TA Wisma Pondok Indah, Dki Jakarta'),
 ('S008', 'WALKER','Jl Landak Baru, Sulawesi Selatan');
 
 

/*MEMBUAT TABEL CUSTOMER*/
CREATE TABLE TB_CUSTOMER (ID_CUSTOMER VARCHAR(10) PRIMARY KEY, 
CUSTOMER_NAME VARCHAR(20) NOT NULL,
CUSTOMER_EMAIL VARCHAR (30), 
CUSTOMER_ADDRESS VARCHAR (100) NOT NULL);
 /*MENAMBAHKAN VALUE TABEL CUSTOMER*/
 INSERT INTO TB_CUSTOMER VALUES
 ('CU001','Tara Phillips','t.phillips@gmail.com','Jl Tj Duren Tmr III/1, Dki Jakarta'),
 ('CU002','Maddie Wright','m.wright@gmail.com','Jl Jend Gatot Subroto Kav 56 Adhi Graha Bldg 12th Fl, Dki Jakarta'),
 ('CU003','George','.morrison@gmail.com','Jl Kiaracondong 175 Ruko 5 C, Jawa Bara'),
 ('CU004','Federick','f.warren@gandatmail.com','Jl Medan Raya Km 13,5, Sumatera Utara'),
 ('CU005','Derek','d.casey@gmail.com','Jl Gayamsari Slt III 1 RT 001/03, Jawa Tengah'),
 ('CU006','Tiana','t.allen@gmail.com','Psr Tanah Abang Bl C Los EKS/6, Dki Jakarta'),
 ('CU007','Anna','a.martin@gmail.com','Jl Sukarno Hatta 170 G, Jawa Barat'),
 ('CU008','Ada','a.brown@gmail.com','Psr Tanah Abang Bl B Los CKS/22, Dki Jakarta'),
 ('CU009','Fenton','f.brown@gmail.com','Jl Aipda KS Tubun Raya 253, Dki Jakarta'),
 ('CU010','Jhon','j.fowler@gmail.com','Gg Johor 21-22, Sumatera Utara');


/*MEMBUAT TABEL PRODUCT*/
CREATE TABLE TB_PRODUCT (ID_PRODUCT VARCHAR(10) PRIMARY KEY, 
PRODUCT_NAME VARCHAR(20) NOT NULL,
PRODUCT_PRICE INT (30) NOT NULL, 
PRODUCT_WEIGHT  INT(30) NOT NULL,
PRODUCT_QTY INT(10) NOT NULL,
ID_BRAND VARCHAR(10) NOT NULL,
ID_CATEGORIES VARCHAR(10) NOT NULL,
ID_SUPLIER VARCHAR(10) NOT NULL,
FOREIGN KEY (ID_BRAND) REFERENCES TB_BRAND (ID_BRAND),
FOREIGN KEY (ID_CATEGORIES) REFERENCES TB_CATEGORIES (ID_CATEGORIES),
FOREIGN KEY (ID_SUPLIER) REFERENCES TB_SUPLIER (ID_SUPLIER)
);
/*MENAMBAHKAN VALUE TABEL PRODUCT*/
INSERT INTO TB_PRODUCT VALUES
('P001','CANON M10',3500000,1500,10,'B001','CT01','S002'),
('P002','CANON M3',3600000,1800,8,'B001','CT01','S002'),
('P003','CANON M100',3900000,1900,7,'B001','CT01','S001'),
('P004','CANON M6',5000000,1950,11,'B001','CT01','S003'),
('P005','CANON M200',7800000,2050,12,'B001','CT01','S005'),
('P006','CANON M50',8300000,1850,15,'B001','CT01','S006'),
('P007','CANON 200D',7500000,2100,9,'B001','CT02','S007'),
('P008','CANON 1500D',4500000,2400,16,'B001','CT02','S003'),
('P009','SONY a6000',6500000,1875,17,'B002','CT01','S004'),
('P010','SONY ZV10',11500000,1575,20,'B002','CT01','S004'),
('P011','SONY a7ii',15500000,1889,13,'B002','CT01','S005'),
('P012','SONY a6400',14500000,1989,18,'B002','CT01','S008'),
('P013','LUMIX G7',7500000,1999,5,'B003','CT01','S008'),
('P014','LUMIX G85',9500000,1940,5,'B003','CT01','S006'),
('P015','FUJIFILM A3',4900000,1850,6,'B004','CT01','S001'),
('P016','FUJIFILM A5',6300000,1760,7,'B004','CT01','S005'),
('P017','FUJIFILM A7',8900000,1960,8,'B004','CT01','S006'),
('P018','GO PRO 9',11200000,999,19,'B005','CT04','S007'),
('P019','INSTA 360 X3',8500000,967,7,'B009','CT04','S003'),
('P020','YI ACTION CAMERA',2900000,950,4,'B007','CT04','S002');


/*MEMBUAT TABEL CART*/
CREATE TABLE TB_CART (ID_CART VARCHAR (10) PRIMARY KEY,
ID_CUSTOMER VARCHAR(10) NOT NULL,
ID_PRODUCT VARCHAR(10) NOT NULL,
CART_QTY INT(10) NOT NULL,
TOTAL_PRICE INT (30) NOT NULL,
FOREIGN KEY (ID_CUSTOMER) REFERENCES TB_CUSTOMER (ID_CUSTOMER),
FOREIGN KEY (ID_PRODUCT) REFERENCES TB_PRODUCT (ID_PRODUCT));
/*MENAMBAHKAN VALUE TABEL CART*/
INSERT INTO TB_CART VALUES
('C001','CU010','P008',2,9000000),
('C002','CU001','P002',1,3600000),
('C003','CU002','P004',3,15000000),
('C004','CU010','P006',2,16600000),
('C005','CU003','P007',2,15000000),
('C006','CU005','P009',1,6500000),
('C007','CU006','P011',1,15500000),
('C008','CU004','P012',1,14500000),
('C009','CU007','P019',1,8500000),
('C010','CU009','P001',1,3500000),
('C011','CU005','P014',1,9500000),
('C012','CU008','P015',1,4900000);


/*MENAMPILKAN DATA RATA-RATA HARGA KAMERA BERMERK CANON*/
SELECT AVG(PRODUCT_PRICE) 
FROM tb_product
WHERE tb_product.ID_BRAND = 'B001';

/*JOIN*/
/*MENAMPILKAN DATA PRODUCT DISERTAI DENGAN DATA SUPLIER YANG MENYUPLAI PRODUCT TERSEBUT*/
SELECT tb_product.ID_SUPLIER, tb_product.PRODUCT_NAME,  tb_suplier.SUPLIER_NAME
 FROM TB_PRODUCT JOIN TB_SUPLIER ON (TB_PRODUCT.ID_SUPLIER = TB_SUPLIER.ID_SUPLIER);


/*SUBQUERY*/
/*MENAMPILKAN DATA HARGA PRODUCT YANG HARGANYA DI ATAS RATA-RATA*/
SELECT * FROM tb_product
WHERE PRODUCT_PRICE > (SELECT AVG(PRODUCT_PRICE) FROM tb_product);

/*MENAMPILKAN DATA HARGA TERTINGGI KAMERA BERMERK CANON */
SELECT MAX(PC.PRODUCT_PRICE)
FROM (SELECT PRODUCT_PRICE
		FROM tb_product
        WHERE ID_BRAND = 'B001') AS PC;


/*MEMBUAT VIEW*/
/*MENAMPILKAN DATA PRODUCT DISERTAI DENGAN DATA SUPLIER YANG MENYUPLAI PRODUCT TERSEBUT*/
CREATE VIEW Show_ProductName_SuplierName AS
SELECT tb_product.ID_SUPLIER, tb_product.PRODUCT_NAME,  tb_suplier.SUPLIER_NAME
 FROM TB_PRODUCT JOIN TB_SUPLIER ON (TB_PRODUCT.ID_SUPLIER = TB_SUPLIER.ID_SUPLIER);
 
 /*MENGECEK VIEW*/
 SHOW FULL TABLES WHERE Table_type = 'VIEW';
 
 /*MENAMPILKAN VIEW*/
 SELECT * FROM Show_ProductName_SuplierName;

/*FUNGSI*/
/*MEMBUAT FUNGSI UNTUK MENGETAHUI BERAPA KALI SUPLIER MEMASOK PRODUK*/
DELIMITER //
CREATE FUNCTION countSuplier (ID_SUPLIER VARCHAR(10))
RETURNS INT(10)
DETERMINISTIC
BEGIN
	DECLARE totalSupplay INT(10);
    
    SELECT COUNT(tb_product.ID_SUPLIER) INTO totalSupplay
    FROM tb_product
    WHERE tb_product.ID_SUPLIER = ID_SUPLIER;
    
    RETURN totalSupplay;
END //
DELIMITER ;

SELECT countSuplier('S006');

/*MEMBUAT FUNGSI UNTUK MENGETAHUI HARGA PRODUK APABILA DIKENAI DISKON*/
DELIMITER //
CREATE FUNCTION priceDiscount(ID_PRODUCT VARCHAR (10),  discount decimal(10,2))
RETURNS DECIMAL (10,2)
DETERMINISTIC
BEGIN
	DECLARE discountValue decimal(10,2);
    DECLARE fixPrice decimal(10,2);
    DECLARE harga int(10);
    
    SELECT tb_product.PRODUCT_PRICE INTO harga
    FROM tb_product
    WHERE tb_product.ID_PRODUCT = ID_PRODUCT;
    
    SET discountValue = harga * (discount/100);
    set fixPrice = harga - discountValue;
    
    RETURN fixPrice;
END //

DELIMITER //

SELECT priceDiscount('P001',20);



/*PROSEDUR*/
/*PROSEDUR UNTUK MENGETAHUI SEMUA TOTAL PRODUK YANG SUDAH TERJUAL ATAU YANG MASIH TERSIMPAN BERDASARKAN ID PRODUCT*/
DELIMITER //
CREATE PROCEDURE countProduct(IN id_product VARCHAR (10), OUT total INT)
BEGIN
	DECLARE STOCK INT;
    DEClARE SALE INT;
    
    SELECT PRODUCT_QTY INTO STOCK FROM tb_product WHERE tb_product.ID_PRODUCT = id_product;
    SELECT SUM(CART_QTY) INTO SALE FROM tb_cart WHERE tb_cart.ID_PRODUCT = id_product;
    
    SET total = STOCK + SALE;
END //
DELIMITER ;

CALL countProduct('P001',@TOTAL);
SELECT @TOTAL;


/*TRIGGER*/
/*TRIGGER UNTUK MENAMBAHKAN DATA PADA TABEL CART LALU MENGURANGI STOCK DI TABEL PRODUK*/
DELIMITER $$
CREATE TRIGGER insert_stock_product_trigger AFTER INSERT ON tb_cart 
for each row 
BEGIN
	UPDATE tb_product SET PRODUCT_QTY = PRODUCT_QTY-NEW.CART_QTY
    WHERE ID_PRODUCT = NEW.ID_PRODUCT;
END $$
DELIMITER ;
SHOW TRIGGERS;
INSERT INTO TB_CART VALUES
('C013','CU008','P008',1,4500000);

SELECT * FROM TB_CART;
SELECT * FROM TB_PRODUCT;



/*TRIGGER UNTUK MENAMBAHKAN DATA update PADA TABEL CART LALU MENGURANGI STOCK DI TABEL PRODUK*/
DELIMITER $$
CREATE TRIGGER update_stock_product_trigger AFTER UPDATE ON tb_cart 
for each row 
BEGIN
	UPDATE tb_product SET PRODUCT_QTY = (PRODUCT_QTY + old.CART_QTY)-NEW.CART_QTY
    WHERE ID_PRODUCT = NEW.ID_PRODUCT;
END $$
DELIMITER ;

/*TRIGGER UNTUK delete DATA PADA TABEL CART LALU MENGURANGI STOCK DI TABEL PRODUK*/
DELIMITER $$
CREATE TRIGGER delete_stock_product_trigger AFTER DELETE ON tb_cart 
for each row 
BEGIN
	UPDATE tb_product SET PRODUCT_QTY = PRODUCT_QTY + old.CART_QTY
    WHERE ID_PRODUCT = old.ID_PRODUCT;
END $$
DELIMITER ;



















